<project name="rexa-textmill" default="compile" basedir=".">
  <description>Rexo project</description>

  <!-- Properties
  -->
  <property name="src" location="src/java"/>
  <property name="lib" location="lib"/>
  <property name="build.dir" location="class"/>
  <property name="doc" location="doc/api"/>
  <property name="jar" location="${build.dir}/rexa1-pstotext-metatagger.jar"/>
  <property name="rexa.root" location=".."/>
  <dirname property="module.rexo.basedir" file="${ant.file}"/>
  <property name="dist" location="dist"/>
  <property name="work" location="work"/>

  <property name="bootclasspath" value="-Xbootclasspath/p:lib/endorsed/xalan.jar:lib/endorsed/xerces.jar:lib/endorsed/xml-apis.jar"/>

  <property environment="env"/>

  <path id="run.classpath">
    <pathelement path="${build.dir}"/>
    <fileset dir="lib" includes="*.jar"/>
  </path>

  <property name="lucene.jar" value="lucene-1.4.2.jar"/>
  <property name="log4j.jar" value="log4j-1.2.9.jar"/>
  <property name="connectorj.jar" value="mysql-connector-java-3.1.7-bin.jar"/>

  <path id="commons.logging.classpath">
    <fileset dir="lib">
      <include name="commons-logging-api.jar"/>
      <include name="commons-logging.jar"/>
    </fileset>
  </path>

  <path id="project.classpath">
    <pathelement path="${build.dir}"/>
    <fileset dir="lib/endorsed">
      <include name="xalan.jar"/>
      <include name="xerces.jar"/>
      <include name="xml-apis.jar"/>
    </fileset>
    <path refid="commons.logging.classpath"/>
    <fileset dir="lib">
      <include name="jdom-1.0.jar"/>
      <include name="mallet.jar"/>
      <include name="${connectorj.jar}"/>
      <include name="${log4j.jar}"/>
      <include name="commons-pool-1.2.jar"/>
      <include name="commons-net-1.1.0.jar"/>
      <include name="commons-lang-2.2.jar"/>
      <include name="commons-dbutils-1.1-dev.jar"/>
      <include name="commons-dbcp-1.2.1.jar"/>
      <include name="commons-collections-3.1.jar"/>
      <include name="commons-cli-1.0.jar"/>
      <include name="commons-io-1.0.jar"/>
      <include name="commons-math-1.0.jar"/>
      <include name="junit-3.8.1.jar"/>
      <include name="secondstring-serializable.jar"/>
      <include name="ecs-1.4.2.jar"/>
      <include name="xml-writer.jar"/>
      <include name="rexa-common.jar"/>
    </fileset>
  </path>


  <fileset id="project.resources" dir="${src}">
    <patternset>
      <include name="org/**"/>
      <exclude name="**/*.java"/>
    </patternset>
  </fileset>

  <!--	Clean	-->
  <target
      name="clean"
      description="clean">
    <!-- Delete class files -->
    <delete dir="${build.dir}"/>
    <delete file="${jar}"/>
  </target>


  <!-- Initialization -->
  <target name="init"
	  unless="nocompile">
    <tstamp/>
    <!-- Create an output directory -->
    <mkdir dir="${build.dir}"/>
    <copy todir="${build.dir}">
      <fileset refid="project.resources"/>
    </copy>
  </target>

  <property name="mallet" value="../mallet-trunk"/>
  <property name="rexa.common" value="../rexa-common-trunk"/>

  <target name="deps">
    <ant dir="${mallet}" target="base-jar" inheritAll="false"/>
    <ant dir="${rexa.common}" target="jar" inheritAll="false"/>
    <copy file="${mallet}/mallet.jar" todir="lib"/>
    <copy file="${rexa.common}/rexa-common.jar" todir="lib"/>
  </target>

  <!-- -->
  <condition property="debug.compile" value="true">
    <isset property="debug"/>
  </condition>
  <property name="debug.compile" value="false"/>

  <!-- Compile
  -->
  <target
      name="compile"
      depends="init"
      description="Compile all the source files"
      unless="nocompile">
    <javac
	source="1.6"
	srcdir="${src}"
	destdir="${build.dir}"
	classpathref="project.classpath"
	debug="${debug.compile}"
	/>
  </target>

  <!-- Debugging arguments -->
  <property name="suspend" value="n"/>
  <property name="address" value="5005"/>
  <property name="jvmargs.debug.default" value="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=${suspend},address=${address}"/>
  <property name="jvmargs.0" value="-Xmx1800M ${bootclasspath}"/>
  <condition property="jvmargs.debug" value="${jvmargs.debug.default}">
    <isset property="debug"/>
  </condition>
  <property name="jvmargs.debug" value=""/>

  <!-- Profiling arguments -->
  <condition property="jvmargs.prof" value="-Xrunjprofiler:port=8849 -Xint -Xbootclasspath/a:lib/jprof/agent.jar">
    <isset property="profile"/>
  </condition>
  <property name="jvmargs.prof" value=""/>

  <!-- Properties to be passed to jvm -->
  <propertyset id="jvmarg.props">
    <propertyref prefix="jvmargx."/>
    <mapper type="glob" from="jvmargx.*" to="*"/>
  </propertyset>

  <property name="jvmargs.props" refid="jvmarg.props"/>

  <!-- -->
  <condition property="env.key.prof" value="LD_LIBRARY_PATH">
    <isset property="profile"/>
  </condition>
  <property name="env.key.prof" value=""/>

  <condition property="env.val.prof" value="${basedir}/bin">
    <isset property="profile"/>
  </condition>
  <property name="env.val.prof" value=""/>

  <property name="jvmargs" value="${jvmargs.0} ${jvmargs.debug} ${jvmargs.prof}"/>

  <target name="testrun">
    <echo message="${jvmargs}"/>
  </target>

  <!-- -->
  <target name="run" depends="compile">
    <property name="syntax" value="Syntax: ant run -Dclass=my.package.MyClass -Dargs='--arg1,...' -Djvm.prop.propkey=value -Ddebug -Dprofile"/>
    <fail unless="class" message="${syntax}"/>
    <property name="class" value=""/>
    <property name="args" value=""/>
    <property name="cpref" value="project.classpath"/>
    <echo message="java ${jvmargs} ${class} ${args}"/>
    <java classname="${class}" dir="${basedir}" fork="true" classpathref="${cpref}" jvmargs="${jvmargs}" args="${args}">
      <syspropertyset>
	<propertyref prefix="jvm.prop."/>
	<mapper type="glob" from="jvm.prop.*" to="*"/>
      </syspropertyset>
      <env key="${env.key.prof}" path="${env.val.prof}"/>
    </java>
  </target>

  <target
      name="jar"
      depends="compile"
      description="build jar file">
    <jar destfile="${jar}" duplicate="preserve">
      <fileset dir="${build.dir}">
	<include name="org/rexo/**"/>
      </fileset>
    </jar>
  </target>

</project>
